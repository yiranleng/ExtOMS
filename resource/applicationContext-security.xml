<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:s="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd"
	default-lazy-init="true">

	<!--wuxiaoxu 20130718 add-->
	<description>SpringSecurity安全配置</description>

	<bean id="loggerListener" class="org.springframework.security.authentication.event.LoggerListener" />
	<!-- http安全配置  use-expressions="true" 就必须使用表达式行驶  access="isAuthenticated()" access="hasRole('ROLE_SUPERVISOR')"-->
	<!-- http安全配置  use-expressions="false" 就必须使用表达式行驶  access="ROLE_USER"-->
<!--	wuxiaoxu 20130721 如果设为none 在相应的url请求里 就得不到权限SecurityContextHolder.getContext().getAuthentication()-->
	<s:http auto-config="true" use-expressions="true" access-denied-page="/403.jsp">
<!--		<s:intercept-url pattern="/style/**" filters="none" />-->
<!--		<s:intercept-url pattern="/images/**" filters="none" />-->
		<s:intercept-url pattern="/scripts/**" filters="none" />
		<s:intercept-url pattern="/static/**" filters="none" />
		<s:intercept-url pattern="/login.*" filters="none" />
<!--		<s:intercept-url pattern="/services/*" filters="none" />-->
		<s:intercept-url pattern="/login/index" filters="none" />
<!--		<s:intercept-url pattern="/download/**" filters="none" />-->
<!--		<s:intercept-url pattern="/login.html" filters="none" />-->
<!--		<s:intercept-url pattern="/dbMonitor" filters="none" />-->
<!--		<s:intercept-url pattern="/qr/**" filters="none" />-->
<!--		<s:intercept-url pattern="http://api.map.baidu.com/api?v=1.3" filters="none" />-->
		<s:intercept-url pattern="/login/main" access="isAuthenticated()" />
<!--		<s:intercept-url pattern="/identity/**" access="isAuthenticated()" />-->
<!--		<s:intercept-url pattern="/account/**" access="isAuthenticated()" />-->
<!--		<s:intercept-url pattern="/map/**" access="isAuthenticated()" />-->
<!--		<s:intercept-url pattern="/tenant/**" access="isAuthenticated()" />-->
<!--		<s:intercept-url pattern="/terminal/**" access="isAuthenticated()" />-->
<!--		<s:intercept-url pattern="/warn/**" access="isAuthenticated()" />-->
		<s:intercept-url pattern="/**" access="isAuthenticated()" />
		
		<!-- login-page:默认指定的登录页面. authentication-failure-url:出错后跳转页面. default-target-url:成功登陆后跳转页面 -->
		<!--wuxiaoxu 20130719 页面跳转直接中断过滤链根本到不了servlet中-->
		<s:form-login login-page="/login.jsp" default-target-url="/index.jsp" always-use-default-target="true"
			authentication-failure-url="/login.jsp?error=1" />
		<!--退出后的页面-->
		<s:logout logout-success-url="/login.jsp" />
		
		<!-- cookies记住它	-->
		<s:remember-me />

		<!-- id登陆唯一. 超过最大（max-sessions）登录个数后后面的则无法再登录 error-if-maximum-exceeded="true" 禁止2次登陆; 
			session-fixation-protection="none" 防止伪造sessionid攻击. 用户登录成功后会销毁用户当前的session. 
			创建新的session,并把用户信息复制到新session中. -->
		<s:session-management invalid-session-url="/login.jsp?error=3"
			session-fixation-protection="none">
			<s:concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
		</s:session-management>
	</s:http>


	<!--wuxiaoxu test 20130718 错误信息用其自带的-->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:org/springframework/security/messages_zh_CN" />
	</bean>

	<!-- 方法安全配置 -->
	<s:global-method-security secured-annotations="enabled" />

	<!-- 认证配置, 使用userDetailsService提供的用户信息 -->
	<s:authentication-manager alias="authenticationManager">
		<s:authentication-provider user-service-ref="userDetailsService">
<!--			<s:password-encoder hash="md5" /> md5 方式-->
			<s:password-encoder hash="plaintext" />
		</s:authentication-provider>
	</s:authentication-manager>

	<!-- 用户查询服务 -->
	<bean id="userDetailsService" class="com.superflying.cn.service.CustomUserDetailsService" />
</beans>